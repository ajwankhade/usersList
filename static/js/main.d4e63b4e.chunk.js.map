{"version":3,"sources":["actions/usersList.js","utils/loggerUtil.js","components/usersList/UserRow.jsx","components/usersList/UsersList.jsx","containers/UserListContainer.js","serverCalls/FetchUsers.js","components/userAddresses/AddressCard.jsx","components/userAddresses/UserAddresses.jsx","containers/UserAddressesContainer.js","serverCalls/FetchUserAddresses.js","actions/userAddresses.js","components/appHeader/index.js","components/appHeader/AppHeader.jsx","ErrorBoundary.jsx","App.js","serviceWorker.js","reducers/users.js","reducers/usersDataLoading.js","reducers/usersData.js","reducers/userAddressesData.js","reducers/app.js","store.js","index.js"],"names":["setUsersDataLoading","flag","dispatch","type","logThis","msg","value","window","Storage","key","Date","getTime","localStorage","setItem","JSON","stringify","UserRow","user","this","props","className","isSelected","id","onClick","setSelectedUser","name","age","gender","React","Component","UsersList","getUsersContent","users","selectedUser","userDataLoading","length","map","UserListContainer","fetchUsers","connect","state","usersData","usersDataLoading","axios","get","then","data","userData","setUsers","catch","console","log","AddressCard","address","house_no","street_name","city_name","country","UserAddresses","getAddressCards","userAddress","userAddressesLoading","index","address_id","UserAddressesContainer","fetchUserAddresses","ownProps","addresses","userAddressesData","userAddresses","userId","setUserAddressesLoading","setUserAddresses","FetchUserAddresses","AppHeader","ErrorBoundary","hasError","error","errorInfo","children","App","useState","style","width","color","textAlign","Boolean","location","hostname","match","initialState","action","combineReducers","createStore","appReducer","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d4e63b4e.chunk.js","sourcesContent":["export const setUsers = (userData = []) => dispatch => {\n\tdispatch({\n\t\ttype: 'SET_USERS',\n\t\tuserData\n\t})\n}\n\nexport const setUsersDataLoading = (flag = false) => dispatch => {\n\tdispatch({\n\t\ttype: 'SET_USERS_DATA_LOADING',\n\t\tflag\n\t})\n}","export const logThis = (msg, value = {}) => {\n\tif (typeof (window.Storage) !== \"undefined\") {\n\t\tconst key = (new Date()).getTime() + `_${msg}`;\n\t\twindow.localStorage.setItem(key, JSON.stringify(value))\n\t}\n}","import React from 'react';\nimport './styles.scss';\n\nclass UserRow extends React.Component {\n\trender() {\n\t\tconst { user } = this.props;\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={`user-row${this.props.isSelected ? ' selected' : ''}`}\n\t\t\t\tkey={`user_${user.id}`}\n\t\t\t\tonClick={() => this.props.setSelectedUser(user.id, user)}\n\t\t\t>\n\t\t\t\t<div>{user.id}</div>\n\t\t\t\t<div>{user.name}</div>\n\t\t\t\t<div>{user.age}</div>\n\t\t\t\t<div>{user.gender}</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UserRow;","import React from 'react';\nimport './styles.scss';\nimport UserRow from './UserRow';\n\nclass UsersList extends React.Component {\n\n\tgetUsersContent = () => {\n\t\tconst { users, selectedUser, userDataLoading } = this.props;\n\n\t\tif (userDataLoading) {\n\t\t\treturn <div className=\"users-list-container\" name=\"loading\">Loading users...</div>\n\t\t}\n\n\t\tif (users.length === 0) {\n\t\t\treturn <div className=\"users-list-container\" name=\"noUsers\">There are no users available</div>\n\t\t}\n\n\t\treturn users.map(user => {\n\t\t\treturn <UserRow\n\t\t\t\tkey={`user_${user.id}`}\n\t\t\t\tuser={user}\n\t\t\t\tsetSelectedUser={this.props.setSelectedUser}\n\t\t\t\tisSelected={selectedUser && selectedUser.id === user.id}\n\t\t\t/>\n\t\t})\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"users-list-container\">\n\t\t\t\t<h2 className=\"container-header\">Users</h2>\n\t\t\t\t<div className=\"users\">\n\t\t\t\t\t<div className=\"user-row-header\">\n\t\t\t\t\t\t<div>User ID</div>\n\t\t\t\t\t\t<div>User Name</div>\n\t\t\t\t\t\t<div>User Age</div>\n\t\t\t\t\t\t<div>Gender</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.getUsersContent()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default UsersList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FetchUsers } from '../serverCalls/FetchUsers.js';\nimport UsersList from '../components/usersList/UsersList.jsx';\n\nexport class UserListContainer extends React.Component {\n\tcomponentDidMount() {\n\t\tthis.props.fetchUsers();\n\t}\n\n\trender() {\n\t\treturn <UsersList {...this.props} />\n\t}\n}\n\nconst mapStateToProps = state => ({\n\tusers: state.usersData.users,\n\tuserDataLoading: state.usersData.usersDataLoading\n})\n\nconst mapDispatchToProps = dispatch => ({\n\tfetchUsers: () => dispatch(FetchUsers())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserListContainer);","import axios from \"axios\";\nimport {\n\tsetUsers,\n\tsetUsersDataLoading\n} from '../actions/usersList.js';\nimport { logThis } from '../utils/loggerUtil';\n\nexport const FetchUsers = () => dispatch => {\n\tdispatch(setUsersDataLoading(true));\n\tlogThis(\"Calling fetch users\");\n\treturn axios\n\t\t.get(\n\t\t\t\"https://demo5472662.mockable.io/users\"\n\t\t)\n\t\t.then(({ data }) => {\n\t\t\tdispatch(setUsers(data));\n\t\t\tdispatch(setUsersDataLoading(false));\n\t\t\tlogThis(\"Fetched users successfully\");\n\t\t})\n\t\t.catch(() => {\n\t\t\tlogThis(\"Error fetching users\");\n\t\t\tconsole.log(\"error while fetching users\");\n\t\t});\n}","import React from 'react';\nimport './userAddresses.scss';\n\nconst AddressCard = ({ address }) => {\n\treturn (\n\t\t<div className=\"address-card\">\n\t\t\t<p>{address.house_no}</p>\n\t\t\t<p>{address.street_name}</p>\n\t\t\t<p>{address.city_name}</p>\n\t\t\t<p>{address.country}</p>\n\t\t</div>\n\t)\n}\n\nexport default AddressCard","import React from 'react';\nimport './userAddresses.scss';\nimport AddressCard from './AddressCard';\n\nclass UserAddresses extends React.Component {\n\n\tgetAddressCards = () => {\n\t\tconst {\n\t\t\tselectedUser,\n\t\t\tuserAddress,\n\t\t\tuserAddressesLoading\n\t\t} = this.props;\n\n\t\tif (userAddressesLoading)\n\t\t\treturn <div className=\"address-container\" name=\"loading\">Loading address...</div>\n\n\t\tif (userAddress.length === 0)\n\t\t\treturn <div className=\"address-container\" name=\"noContent\">No addresses for this user!</div>\n\n\n\t\treturn userAddress.map((address, index) => {\n\t\t\treturn <AddressCard\n\t\t\t\tkey={`address_${address.address_id}_user_${selectedUser.id}`}\n\t\t\t\taddress={address}\n\t\t\t/>\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { selectedUser } = this.props;\n\n\n\t\treturn (\n\t\t\t<div className=\"address-container\">\n\t\t\t\t<h2 className=\"header-text\">\n\t\t\t\t\t{selectedUser.name}'s Addresses\n\t\t\t\t</h2>\n\t\t\t\t<div className=\"address-cards-container\">\n\t\t\t\t\t{this.getAddressCards()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default UserAddresses;","import React from 'react';\nimport { FetchUserAddresses } from '../serverCalls/FetchUserAddresses.js';\nimport { connect } from 'react-redux';\nimport UserAddresses from '../components/userAddresses/UserAddresses.jsx';\n\nexport class UserAddressesContainer extends React.Component {\n\n\tcomponentDidMount() {\n\t\tif (this.props.userAddress.length === 0)\n\t\t\tthis.props.fetchUserAddresses(this.props.selectedUser.id)\n\t}\n\n\trender() {\n\t\treturn <UserAddresses {...this.props} />\n\t}\n}\n\nexport const getUserAddress = (addresses, userId) => {\n\tif (!addresses) return [];\n\treturn addresses[userId] || [];\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\treturn {\n\t\tuserAddress: getUserAddress(state.userAddressesData.userAddresses, ownProps.selectedUser.id),\n\t\tuserAddressesLoading: state.userAddressesData.userAddressesLoading\n\t}\n}\nconst mapDispatchToProps = dispatch => ({\n\tfetchUserAddresses: (userId) => dispatch(FetchUserAddresses(userId))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAddressesContainer);","import axios from \"axios\";\nimport {\n\tsetUserAddresses,\n\tsetUserAddressesLoading\n} from '../actions/userAddresses.js';\nimport { logThis } from '../utils/loggerUtil';\n\nexport const FetchUserAddresses = (userId) => dispatch => {\n\tdispatch(setUserAddressesLoading(true));\n\tlogThis(\"Calling fetch addresses for a user\")\n\taxios\n\t\t.get(\n\t\t\t`https://demo5472662.mockable.io/user${userId}_addresses`\n\t\t)\n\t\t.then(({ data }) => {\n\t\t\tdispatch(setUserAddresses(userId, data));\n\t\t\tlogThis(\"User addresses fetched successfully\", data);\n\t\t})\n\t\t.catch(() => {\n\t\t\tlogThis(\"Error fetching user addresses\");\n\t\t});\n}","export const setUserAddresses = (userId, userAddresses = []) => dispatch => {\n\tdispatch({\n\t\ttype: 'SET_USER_ADDRESSES',\n\t\tuserAddresses,\n\t\tuserId\n\t})\n}\n\nexport const setUserAddressesLoading = (flag = false) => dispatch => {\n\tdispatch({\n\t\ttype: 'SET_USER_ADDRESSES_LOADING',\n\t\tflag\n\t})\n}","import AppHeader from './AppHeader';\n\nexport default AppHeader","import React from 'react';\nimport './appHeader.scss';\n\nclass AppHeader extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app-header-container\">\n\t\t\t\t<h1 className=\"header-text\">\n\t\t\t\t\tUser Details Portal\n\t\t\t\t</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default AppHeader;","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { hasError: false };\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\treturn { hasError: true };\n\t}\n\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(error, errorInfo);\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Something went wrong.</h1>;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport UserListContainer from './containers/UserListContainer.js';\nimport UserAddressesContainer from './containers/UserAddressesContainer.js';\nimport AppHeader from './components/appHeader';\nimport ErrorBoundary from './ErrorBoundary';\n\nconst App = () => {\n\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  const setUser = (userId, user = {}) => {\n    setSelectedUser(user)\n  }\n\n  return (\n    <ErrorBoundary >\n      <div className=\"App\">\n        <AppHeader />\n        <div className=\"content\">\n          <UserListContainer\n            selectedUser={selectedUser}\n            setSelectedUser={setUser}\n          />\n          {\n            selectedUser ?\n              <UserAddressesContainer\n                key={`user_${selectedUser.id}`}\n                selectedUser={selectedUser}\n              />\n              :\n              <div style={{ width: '100%' }}>\n                <h2 style={{ color: '#666', textAlign: 'center' }}>\n                  No user selected\n\t\t\t\t      </h2>\n              </div>\n          }\n        </div>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = []\n\nconst users = (state = initialState, action = {}) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USERS':\n\t\t\treturn action.userData\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default users;","const initialState = false\n\nconst usersDataLoading = (state = initialState, action = {}) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USERS_DATA_LOADING':\n\t\t\treturn action.flag\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default usersDataLoading;","import { combineReducers } from 'redux';\nimport users from './users';\nimport usersDataLoading from './usersDataLoading';\n\nconst usersData = combineReducers({\n\tusers,\n\tusersDataLoading\n});\n\nexport default usersData;","const initialState = {\n\tuserAddresses: {},\n\tuserAddressesLoading: false\n}\n\nconst userAddressesData = (state = initialState, action = {}) => {\n\tswitch (action.type) {\n\t\tcase 'SET_USER_ADDRESSES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserAddresses: {\n\t\t\t\t\t...state.userAddresses,\n\t\t\t\t\t[action.userId]: action.userAddresses\n\t\t\t\t},\n\t\t\t\tuserAddressesLoading: false\n\t\t\t}\n\t\tcase 'SET_USER_ADDRESSES_LOADING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserAddressesLoading: action.flag\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default userAddressesData;","import { combineReducers } from 'redux';\nimport usersData from './usersData';\nimport userAddressesData from './userAddressesData';\n\nexport default combineReducers({\n\tusersData,\n\tuserAddressesData\n});","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport appReducer from './reducers/app.js';\n\nexport default createStore(appReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}